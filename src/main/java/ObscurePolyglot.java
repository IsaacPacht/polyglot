/**
 * Calculate 1+1+1+1+1+1+1+1+1+1, with each addition operation performed in a different language,
 * all wrapped into a single Java statement. 
 * 
 * For more insight, see {@link SlightlyLessObscurePolyglot} 
 */
public class ObscurePolyglot {
  public static void main(String[] args) throws javax.script.ScriptException {
    System.out.println(new javax.script.ScriptEngineManager().getEngineFactories().stream().filter(f8 -> f8.getEngineName().equals("jython")).findAny().get().getScriptEngine().eval("a+1", new javax.script.SimpleBindings(new java.util.HashMap<>(java.util.Collections.singletonMap("a", new javax.script.ScriptEngineManager().getEngineFactories().stream().filter(f7 -> f7.getEngineName().equals("Oracle Nashorn")).findAny().get().getScriptEngine().eval("a+1", new javax.script.SimpleBindings(new java.util.HashMap<>(java.util.Collections.singletonMap("a", new javax.script.ScriptEngineManager().getEngineFactories().stream().filter(f6 -> f6.getEngineName().equals("Groovy Scripting Engine")).findAny().get().getScriptEngine().eval("a+1", new javax.script.SimpleBindings(new java.util.HashMap<>(java.util.Collections.singletonMap("a", new javax.script.ScriptEngineManager().getEngineFactories().stream().filter(f5 -> f5.getEngineName().equals("juel")).findAny().get().getScriptEngine().eval("${a+1}", new javax.script.SimpleBindings(new java.util.HashMap<>(java.util.Collections.singletonMap("a", new javax.script.ScriptEngineManager().getEngineFactories().stream().filter(f4 -> f4.getEngineName().equals("BeanShell Engine")).findAny().get().getScriptEngine().eval("a+1", new javax.script.SimpleBindings(new java.util.HashMap<>(java.util.Collections.singletonMap("a", new javax.script.ScriptEngineManager().getEngineFactories().stream().filter(f3 -> f3.getEngineName().equals("Clojure Scripting Engine")).findAny().get().getScriptEngine().eval("(+ a 1)", new javax.script.SimpleBindings(new java.util.HashMap<>(java.util.Collections.singletonMap("a", new javax.script.ScriptEngineManager().getEngineFactories().stream().filter(f2 -> f2.getEngineName().equals("JEXL Engine")).findAny().get().getScriptEngine().eval("a+1", new javax.script.SimpleBindings(new java.util.HashMap<>(java.util.Collections.singletonMap("a", new javax.script.ScriptEngineManager().getEngineFactories().stream().filter(f1 -> f1.getEngineName().equals("Luaj")).findAny().get().getScriptEngine().eval("return a+1", new javax.script.SimpleBindings(new java.util.HashMap<>(java.util.Collections.singletonMap("a", new javax.script.ScriptEngineManager().getEngineFactories().stream().filter(f -> f.getEngineName().equals("JSR 223 JRuby Engine")).findAny().get().getScriptEngine().eval("a+1", new javax.script.SimpleBindings(new java.util.HashMap<>(java.util.Collections.singletonMap("a", (Object) 1)))))))))))))))))))))))))))))))))))));
  }
}
